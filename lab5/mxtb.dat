//                     Copyright (c) 2007 - 2018 Synopsys, Inc.
//    This software and the associated documentation are proprietary to Synopsys,
//  Inc. This software may only be used in accordance with the terms and conditions
//  of a written license agreement with Synopsys, Inc. All other use, reproduction,
//             or distribution of this software is strictly prohibited.
//
// MAX TB Test Data File, generated by MAX TB Version O-2018.06-SP1
// Thu Oct 19 22:49:19 2023
// Module under test: ripplecarry4_clk
// Generated from original STIL file : ripplecarry4_clk.stil
// STIL file version: "1.0"

// TPC
1110
// WFT _multiclock_capture_WFT_
00_0000000000000011
// Condition
00010_0000000000000100
0000000000000_0000000000000_10011
111111_XXXXXX_10101
// Macro test_setup
00000_0000000000001110
//SetForceSI 0
00_0000000000001011 
//Pattern #0
0000000000000000000000000000_0000000000000010 
// Proc load_unload
00001_0000000000001111
111_01011
// Proc multiclock_capture
00010_0000000000010000
000000000Z000_1100111001000_10011
111111_001011_10101
//SetForceSI 1
01_0000000000001011 
//Pattern #1
0000000000000001
// Proc load_unload
00010_0000000000001111
111_10010
100_01011
// Proc multiclock_capture
00010_0000000000010000
000000000Z000_0101010111000_10011
111111_110011_10101
//Pattern #2
0000000000000001
// Proc load_unload
00010_0000000000001111
010_10010
000_01011
// Proc multiclock_capture
00010_0000000000010000
000000000Z000_1111010111000_10011
111111_100100_10101
//Pattern #3
0000000000000001
// Proc load_unload
00010_0000000000001111
011_10010
011_01011
// Proc multiclock_capture
00010_0000000000010000
000000000Z000_1100010001000_10011
111111_011100_10101
//Pattern #4
0000000000000001
// Proc load_unload
00010_0000000000001111
010_10010
000_01011
// Proc multiclock_capture
00010_0000000000010000
000000000Z000_0001101101010_10011
111111_110100_10101
//Pattern #5
0000000000000001
// Proc load_unload
00010_0000000000001111
000_10010
110_01011
// Proc multiclock_capture
00010_0000000000010000
0000000000000_0110001100111_10011
111111_101101_10101
//Pattern #6
0000000000000001
// Proc load_unload
00010_0000000000001111
110_10010
110_01011
// Proc multiclock_capture
00010_0000000000010000
000000000Z000_1110100111110_10011
111111_111001_10101
//Pattern #7
0000000000000001
// Proc load_unload
00010_0000000000001111
000_10010
010_01011
// Proc multiclock_capture
00010_0000000000010000
000000000Z000_1111100001000_10011
111111_001010_10101
//Pattern #8
0000000000000001
// Proc load_unload
00010_0000000000001111
101_10010
010_01011
// Proc multiclock_capture
00010_0000000000010000
000000000Z000_1110011001110_10011
111111_010100_10101
//Pattern #9
0000000000000001
// Proc load_unload
00010_0000000000001111
000_10010
111_01011
// Proc multiclock_capture
00010_0000000000010000
000000000Z000_1001001001010_10011
111111_111001_10101
//Pattern #10
0000000000000001
// Proc load_unload
00010_0000000000001111
100_10010
001_01011
// Proc multiclock_capture
00010_0000000000010000
000000000Z000_0101100011010_10011
111111_000010_10101
//Pattern #11
0000000000000001
// Proc load_unload
00010_0000000000001111
011_10010
000_01011
// Proc multiclock_capture
00010_0000000000010000
000000000Z000_1000011011010_10011
111111_001100_10101
//Pattern #12
0000000000000001
// Proc load_unload
00010_0000000000001111
001_10010
111_01011
// Proc multiclock_capture
00010_0000000000010000
000000000Z000_1110001001010_10011
111111_010111_10101
//Pattern #13
0000000000000001
// Proc load_unload
00010_0000000000001111
110_10010
010_01011
// Proc multiclock_capture
00010_0000000000010000
0000000000000_1110011100001_10011
111111_010110_10101
// Proc load_unload
00001_0000000000001111
010_10010
//End of Patterns
0000000000000000
